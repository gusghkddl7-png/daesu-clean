"use client";
import React, { useEffect } from "react";

/** 쿼리 필터(원하면 조정) */
const FILTER_TARGETS: Record<string, RegExp> = {
  biz:   /(상가|사무실|오피스텔|상가주택)/i,
  redev: /(재개발|재건축|정비|구역|정비구역)/i,
};

function norm(t?: string) { return (t || "").replace(/\s+/g, " ").trim(); }
function findLabel(re: RegExp): HTMLElement | null {
  return (Array.from(document.querySelectorAll("label")).find(el => re.test(norm(el.textContent || ""))) as HTMLElement) || null;
}
function findBtn(re: RegExp): HTMLElement | null {
  return (Array.from(document.querySelectorAll("a,button")).find(el => re.test(norm((el as HTMLElement).innerText))) as HTMLElement) || null;
}
function commonAncestor(a: HTMLElement, b: HTMLElement): HTMLElement | null {
  const seen = new Set<HTMLElement>(); let x: HTMLElement | null = a; let i=0;
  while (x && i++ < 12) { seen.add(x); x = x.parentElement; }
  let y: HTMLElement | null = b; let j=0;
  while (y && j++ < 12) { if (seen.has(y)) return y; y = y.parentElement; }
  return null;
}
function getQuery(name: string) {
  try { return new URLSearchParams(window.location.search).get(name) || ""; } catch { return ""; }
}

/* 표 필터 유틸 */
function clearRows() { document.querySelectorAll("table tbody tr").forEach(tr => ((tr as HTMLElement).style.display = "")); }
function applyRegexToTable(re: RegExp) {
  document.querySelectorAll("table tbody tr").forEach(tr => {
    const t = norm(tr.textContent || "");
    (tr as HTMLElement).style.display = re.test(t) ? "" : "none";
  });
}

/* 검색 옆 인라인 필터 버튼 */
function addInlineButtons(after: HTMLElement) {
  let span = document.getElementById("daesu-inline") as HTMLSpanElement | null;
  if (!span) {
    span = document.createElement("span");
    span.id = "daesu-inline";
    span.className = "inline-flex items-center gap-2 align-middle";
    span.style.marginLeft = "0"; // 왼쪽 끝
    after.insertAdjacentElement("afterend", span);
  } else {
    span.innerHTML = "";
  }

  const mk = (label: string, handler: () => void) => {
    const b = document.createElement("button");
    b.className = "px-3 py-1 rounded border text-sm";
    b.textContent = label;
    b.addEventListener("click", handler);
    span!.appendChild(b);
  };

  const resetUI = () => {
    const inp = document.querySelector<HTMLInputElement>('input[placeholder*="검색"],input[placeholder*="주소"],input[placeholder*="메모"]');
    if (inp) { inp.value = ""; inp.dispatchEvent(new Event("input",{bubbles:true})); inp.dispatchEvent(new Event("change",{bubbles:true})); }
    const uncheck = (re: RegExp) => { const L = findLabel(re); const cb = L?.querySelector<HTMLInputElement>('input[type="checkbox"]'); if (cb && cb.checked) cb.click(); };
    uncheck(/공실만/); uncheck(/거래완료\s*숨기기/);
  };

  mk("LH/SH",       () => { clearRows(); applyRegexToTable(/\b(LH|SH)\b/i); });
  mk("허그/HF",     () => { clearRows(); applyRegexToTable(/\b(HUG|HF|허그)\b/i); });
  mk("보증보험가능", () => { clearRows(); applyRegexToTable(/(보증보험|보증보험가능|SGI|HUG|HF)/i); });
  mk("새로고침",     () => { clearRows(); resetUI(); });
}

/* 상단 매물장 버튼 묶음 보강 */
function ensureMenuButtons() {
  const a1 = findBtn(/월세매물장/);
  const a2 = findBtn(/전세매물장/);
  const a3 = findBtn(/매매매물장/);
  const anchors = [a1,a2,a3].filter(Boolean) as HTMLElement[];
  if (anchors.length === 0) return;

  // 공통 조상 찾기
  let host: HTMLElement | null = anchors[0].parentElement!;
  for (let i=1;i<anchors.length;i++){ const ca = commonAncestor(host!, anchors[i]); if (ca) host = ca; }
  if (!host) return;

  // 1) '>>>' 류 제거: 텍스트/링크 모두
  const onlyArrows = (s: string) => /^([>\u00BB\u226B]\s*){2,}$/u.test(s.replace(/\s+/g,"")); // >, », ≫  2개 이상
  // 텍스트 노드
  Array.from(host.childNodes).forEach(n => {
    if (n.nodeType === 3) {
      const txt = (n.textContent || "");
      if (onlyArrows(txt)) host!.removeChild(n);
    }
  });
  // a/button 중 '>>>'
  Array.from(host.querySelectorAll("a,button")).forEach(el => {
    if (onlyArrows((el as HTMLElement).innerText || "")) el.remove();
  });

  // 2) 새 버튼 추가(중복 방지)
  const hasBiz  = !!findBtn(/상가\/사무실매물장/);
  const hasRedv = !!findBtn(/재개발매물장/);

  const mk = (label: string, key: "biz"|"redev") => {
    const b = document.createElement("button");
    b.className = "px-3 py-1 rounded border text-sm";
    b.textContent = label;
    b.addEventListener("click", () => { window.location.assign(`/listings?filter=${key}`); });
    host!.appendChild(b);
  };
  if (!hasBiz)  mk("상가/사무실매물장", "biz");
  if (!hasRedv) mk("재개발매물장",     "redev");
}

export default function ToolbarArrange() {
  useEffect(() => {
    try {
      const search = document.querySelector<HTMLInputElement>('input[placeholder*="검색"],input[placeholder*="주소"],input[placeholder*="메모"]');
      const labVac  = findLabel(/공실만/);
      const labDone = findLabel(/거래완료\s*숨기기/);
      const addBtn  = findBtn(/\+\s*매물등록/);

      if (search) addInlineButtons(search);
      ensureMenuButtons();

      // 줄 정렬(검색 왼쪽 / 체크박스 우측 / +매물등록 맨끝)
      let host: HTMLElement | null = null;
      if (search && labVac) host = commonAncestor(search, labVac);
      if (!host && labVac && addBtn) host = commonAncestor(labVac, addBtn);
      if (!host && search) host = (search.closest("form,div,section,header") as HTMLElement) || null;
      if (host) {
        host.style.display = "flex";
        host.style.flexWrap = "wrap";
        host.style.alignItems = "center";
        host.style.gap = "8px";
        host.style.justifyContent = "flex-start";
        if (search) (search as HTMLElement).style.order = "0";
        if (labVac)  { labVac.style.order = "2"; (labVac as HTMLElement).style.marginLeft = "auto"; }
        if (labDone) labDone.style.order = "2";
        if (addBtn)  { (addBtn as HTMLElement).style.order = "3"; }
      }

      // URL 쿼리 필터 자동 적용
      const key = getQuery("filter");
      const re = FILTER_TARGETS[key];
      if (re) { clearRows(); applyRegexToTable(re); }
    } catch {}
  }, []);
  return null;
}
